<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">

    <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.100logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />
    <property name="FILE_LOG_PATTERN" value="%-12(%d{yyyy-MM-dd HH:mm:ss.SSS}) |-%-5level [%thread] %c [%L] -| %X{reqSeqId}%X{reqSeqIdVal} %msg%n" />
    <property name="LOG_DIR" value="./graceful-shutdown-log" />

    <springProperty scope="context" name="bootstrapServers" source="spring.kafka.bootstrap-servers"/>

    <conversionRule conversionWord="jdbc" converterClass="com.example.logback.JdbcConverter" />

    <!-- 控制台彩色日志输出 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>
    <!-- 按照每天生成日志文件 -->
    <appender name="FILE"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 用于指定哪些数据仅写入kafka，不写入file文件-->
        <File>${LOG_DIR}/logs/graceful-shutdown.log</File><!--不指定会出现Linux无法输出文件-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_DIR}/logs/graceful-shutdown/%d{yyyy-MM-dd,aux}/graceful-shutdown.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <!-- 单个日志最大的大小 -->
            <maxFileSize>20MB</maxFileSize>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <!-- 控制台打印包含traceId在内日志 -->
    <appender name="CONSOLE-TRACE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%-12(%d{yyyy-MM-dd HH:mm:ss.SSS}) |-%-5level [%thread] %c [%L] -| %X{traceId}%X{traceIdVal} %msg%n</pattern>
        </encoder>
    </appender>
    <logger name="io.bytom.pool" level="DEBUG"/>
    <!-- 屏蔽kafka debug -->
    <logger name="org.apache.kafka.clients" level="INFO" />

    <!-- 配置mybatis输出日志到指定服务器路径 -->
    <logger name="java.sql">
        <level value="debug" />
        <appender-ref ref="CONSOLE" />
    </logger>
    <logger name="org.apache.ibatis" level="info" />

    <!-- 调整连接池日志级别 -->
    <logger name="com.zaxxer.hikari" level="INFO"/>

    <!-- 调整kafka消费者组日志级别，避免debug频繁打印日志 -->
    <logger name="org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer" level="INFO" />

    <!-- kafkaAppender解耦，设置向上级传递（logger）让日志同步在文件中执行输出，注意这里的name，支持模糊匹配向上搜索 -->
    <!--<logger name="collect-com" additivity="true" level="INFO">
        <appender-ref ref="KafkaAppender"/>
    </logger>-->

    <root level="INFO">
        <!--<appender-ref ref="CONSOLE" />-->
        <appender-ref ref="FILE" />
        <appender-ref ref="CONSOLE" />
    </root>
</configuration>